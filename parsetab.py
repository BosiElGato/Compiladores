
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.0'

_lr_method = 'LALR'

_lr_signature = 2619529885
    
_lr_action_items = {'DO':([50,52,58,87,88,90,96,130,131,132,133,137,138,169,184,185,186,198,214,],[-4,-24,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,181,-30,-31,-29,-27,-28,]),'CONST':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[1,69,-4,-24,-22,69,69,1,-21,-20,-25,-23,1,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'THEN':([50,52,58,59,87,88,90,96,130,131,132,133,137,138,142,143,144,145,146,147,184,185,186,187,198,214,],[-4,-24,-22,101,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-44,-43,-41,-39,-40,-42,-30,-31,-29,194,-27,-28,]),'NUMBER':([28,29,38,40,41,47,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ELSE':([207,],[209,]),'LBRACKET':([41,61,64,204,],[71,71,71,207,]),'LESSEQUAL':([50,52,58,60,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,107,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'LATCH':([28,29,38,40,41,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'MINUS':([50,52,55,58,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,98,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'REG':([28,29,38,40,41,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'INOUT':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[4,73,-4,-24,-22,73,73,4,-21,-20,-25,-23,4,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'DOUBLEDOT':([50,52,58,87,88,90,96,127,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,-21,-20,-25,-23,155,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'BEGIN':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[5,74,-4,-24,-22,74,74,5,-21,-20,-25,-23,5,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'LPARENT':([15,28,29,38,40,41,45,46,48,49,50,52,53,54,56,57,58,61,64,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,111,130,131,132,133,137,138,150,151,153,155,156,157,158,160,161,162,164,176,182,183,184,185,186,188,196,198,199,206,210,214,],[38,48,48,48,48,48,85,86,48,48,-4,-24,94,48,99,100,-22,48,48,48,48,48,-21,-20,-25,48,48,48,48,48,-23,48,48,48,48,48,48,48,48,48,48,48,-26,-32,-33,-34,-35,-36,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-30,-31,-29,48,48,-27,48,48,48,-28,]),'SEMICOLON':([2,3,7,8,9,17,19,22,23,24,25,27,30,31,34,35,37,39,50,52,58,62,63,66,67,68,70,72,75,76,83,87,88,90,96,109,110,113,114,116,118,119,120,123,124,125,130,131,132,133,137,138,148,149,152,159,166,173,177,179,184,185,186,195,197,198,202,205,214,215,],[-55,-3,-1,-6,-5,-56,-58,-50,-61,43,-48,-47,-49,-59,63,-57,-60,67,-4,-24,-22,-62,-54,112,-63,113,-12,116,-53,119,-51,-21,-20,-25,-23,148,-2,-13,-64,-66,-69,-14,-67,-68,-11,-5,-26,-32,-33,-34,-35,-36,-65,165,-70,-71,178,-37,189,-52,-30,-31,-29,201,-46,-27,205,-15,-28,-45,]),'LESS':([50,52,58,60,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,104,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'TS':([0,50,52,58,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[8,-4,-24,-22,8,-21,-20,-25,-23,8,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'ASIGNATION':([18,44,50,52,53,58,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[40,84,-4,-24,95,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'COMMA':([21,50,52,58,66,82,87,88,90,96,128,129,130,131,132,133,137,138,139,140,149,154,170,177,184,185,186,193,198,203,208,214,],[42,-4,-24,-22,111,126,-21,-20,-25,-23,157,158,-26,-32,-33,-34,-35,-36,161,162,164,168,182,188,-30,-31,-29,199,-27,206,210,-28,]),'DOT':([28,33,54,121,],[47,62,47,152,]),'TILDE':([28,29,38,40,41,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'COLON':([20,21,32,36,50,52,58,82,87,88,90,96,117,122,128,130,131,132,133,137,138,154,171,180,184,185,186,190,198,214,],[41,-16,61,64,-4,-24,-22,-17,-21,-20,-25,-23,151,153,156,-26,-32,-33,-34,-35,-36,-18,183,-19,-30,-31,-29,196,-27,-28,]),'BIT':([0,41,50,52,58,64,81,87,88,90,96,108,130,131,132,133,137,138,150,151,153,167,184,185,186,196,198,214,],[9,75,-4,-24,-22,75,125,-21,-20,-25,-23,9,-26,-32,-33,-34,-35,-36,75,75,75,179,-30,-31,-29,75,-27,-28,]),'$end':([2,3,6,7,8,9,17,19,22,23,25,27,30,31,35,37,50,52,58,62,63,67,83,87,88,90,96,110,113,116,119,130,131,132,133,137,138,148,159,173,184,185,186,197,198,205,214,215,],[-55,-3,0,-1,-6,-5,-56,-58,-50,-61,-48,-47,-49,-59,-57,-60,-4,-24,-22,-62,-54,-63,-51,-21,-20,-25,-23,-2,-13,-66,-14,-26,-32,-33,-34,-35,-36,-65,-71,-37,-30,-31,-29,-46,-27,-15,-28,-45,]),'PLUS':([50,52,55,58,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,97,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'END':([0,22,25,27,30,41,50,52,58,61,64,81,83,87,88,90,96,108,130,131,132,133,137,138,159,173,184,185,186,191,197,198,213,214,215,],[11,-50,-48,-47,-49,78,-4,-24,-22,78,78,11,-51,-21,-20,-25,-23,11,-26,-32,-33,-34,-35,-36,-71,-37,-30,-31,-29,197,-46,-27,215,-28,-45,]),'DIVIDE':([50,51,52,58,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,92,-24,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'FOR':([5,43,74,101,181,194,209,],[26,26,26,26,26,26,26,]),'EQUAL':([50,52,58,60,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,105,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'HASHTAG':([50,52,58,60,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,106,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'GREATEREQUAL':([50,52,58,60,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,102,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'MODULE':([0,50,52,58,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[12,-4,-24,-22,12,-21,-20,-25,-23,12,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'MUX':([28,29,38,40,41,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'ELSIF':([163,],[176,]),'IN':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[13,79,-4,-24,-22,79,79,13,-21,-20,-25,-23,13,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'VAR':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[14,80,-4,-24,-22,80,80,14,-21,-20,-25,-23,14,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'LBLOCK':([22,25,27,30,50,52,58,83,87,88,90,96,130,131,132,133,137,138,141,159,173,184,185,186,197,198,214,215,],[-50,-48,-47,-49,-4,-24,-22,-51,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,163,-71,-37,-30,-31,-29,-46,-27,-28,-45,]),'TIMES':([50,51,52,58,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,91,-24,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'ID':([0,1,4,5,10,11,12,13,14,16,26,28,29,38,40,41,42,43,47,48,49,50,52,54,58,61,64,69,71,73,74,77,78,79,80,81,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,126,130,131,132,133,137,138,150,151,153,155,156,157,158,160,161,162,164,168,176,178,181,182,183,184,185,186,188,194,196,198,199,206,209,210,214,],[15,18,21,28,21,33,34,21,21,39,44,54,54,54,54,54,82,28,88,54,54,-4,-24,54,-22,54,54,18,115,21,28,21,121,21,21,15,54,54,54,-21,-20,-25,54,54,54,54,54,-23,54,54,54,54,28,54,54,54,54,54,54,15,54,154,-26,-32,-33,-34,-35,-36,54,54,54,54,54,54,54,54,54,54,54,180,54,190,28,54,54,-30,-31,-29,54,28,54,-27,54,54,28,54,-28,]),'IF':([5,43,74,101,181,194,209,],[29,29,29,29,29,29,29,]),'RPARENT':([50,52,58,65,87,88,89,90,96,112,130,131,132,133,134,137,138,165,172,174,175,184,185,186,189,192,198,201,212,214,],[-4,-24,-22,110,-21,-20,130,-25,-23,-7,-26,-32,-33,-34,159,-35,-36,-8,184,185,186,-30,-31,-29,-9,198,-27,-10,214,-28,]),'GREATER':([50,52,58,60,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,-24,-22,103,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'SR':([28,29,38,40,41,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'RBLOCK':([22,25,27,30,50,52,58,83,87,88,90,96,130,131,132,133,137,138,159,173,184,185,186,197,198,200,214,215,],[-50,-48,-47,-49,-4,-24,-22,-51,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-71,-37,-30,-31,-29,-46,-27,204,-28,-45,]),'RBRACKET':([22,25,27,30,50,52,58,83,87,88,90,96,115,130,131,132,133,137,138,159,173,184,185,186,197,198,211,214,215,],[-50,-48,-47,-49,-4,-24,-22,-51,-21,-20,-25,-23,150,-26,-32,-33,-34,-35,-36,-71,-37,-30,-31,-29,-46,-27,213,-28,-45,]),'OUT':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[10,77,-4,-24,-22,77,77,10,-21,-20,-25,-23,10,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'TYPE':([0,41,50,52,58,61,64,81,87,88,90,96,108,130,131,132,133,137,138,184,185,186,198,214,],[16,16,-4,-24,-22,16,16,16,-21,-20,-25,-23,16,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),'OR':([50,52,58,87,88,90,96,130,131,132,133,135,136,137,138,184,185,186,198,214,],[-4,-24,-22,-21,-20,-25,-23,-26,-32,-33,-34,160,-38,-35,-36,-30,-31,-29,-27,-28,]),'MOD':([50,51,52,58,87,88,90,96,130,131,132,133,137,138,184,185,186,198,214,],[-4,93,-24,-22,-21,-20,-25,-23,-26,-32,-33,-34,-35,-36,-30,-31,-29,-27,-28,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'TypeDeclaration':([0,41,61,64,81,108,],[2,70,70,70,2,2,]),'module':([0,81,108,],[3,3,3,]),'relation':([29,176,],[59,187,]),'FormalType':([41,64,150,151,153,196,],[72,109,166,72,109,202,]),'ForStatement':([5,43,74,101,181,194,209,],[22,22,22,22,22,22,22,]),'VarDeclaration':([4,10,13,14,77,80,],[19,31,35,37,120,123,]),'SimpleType':([0,81,108,],[6,124,124,]),'BasicType':([0,81,108,],[7,7,7,]),'StatementSequence':([5,74,101,181,194,209,],[23,118,141,191,200,211,]),'statement':([5,43,74,101,181,194,209,],[24,83,24,24,24,24,24,]),'factor':([28,29,38,40,41,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[51,51,51,51,51,51,90,51,51,51,51,51,51,131,132,133,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'type':([41,61,64,],[76,76,76,]),'assignment':([5,43,74,101,181,194,209,],[27,27,27,27,27,27,27,]),'UnitAssignment':([5,43,74,101,181,194,209,],[25,25,25,25,25,25,25,]),'selector':([28,54,],[53,96,]),'ExpressionList':([38,94,],[65,134,]),'integer':([28,29,38,40,41,47,48,49,54,61,64,84,85,86,91,92,93,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[52,52,52,52,52,87,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'condition':([95,],[135,]),'term':([28,29,38,40,41,48,54,61,64,84,85,86,94,95,97,98,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,137,138,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'IdList':([4,10,13,14,73,77,79,80,],[20,32,36,32,117,32,122,32,]),'ConstDeclaration':([1,69,],[17,114,]),'expression':([28,29,38,40,41,48,54,61,64,84,85,86,94,95,99,100,102,103,104,105,106,107,111,150,151,153,155,156,157,158,160,161,162,164,176,182,183,188,196,199,206,210,],[58,60,66,68,81,89,58,108,81,127,128,129,66,136,139,140,142,143,144,145,146,147,149,167,167,167,169,170,171,172,173,174,175,177,60,192,193,195,167,203,208,212,]),'IfStatement':([5,43,74,101,181,194,209,],[30,30,30,30,30,30,30,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SimpleType","S'",1,None,None,None),
  ('SimpleType -> BasicType','SimpleType',1,'p_SimpleType','AnalizadorSintactico.py',84),
  ('SimpleType -> ID LPARENT ExpressionList RPARENT','SimpleType',4,'p_SimpleType','AnalizadorSintactico.py',85),
  ('SimpleType -> module','SimpleType',1,'p_SimpleType','AnalizadorSintactico.py',86),
  ('integer -> NUMBER','integer',1,'p_integer','AnalizadorSintactico.py',90),
  ('BasicType -> BIT','BasicType',1,'p_BasicType','AnalizadorSintactico.py',94),
  ('BasicType -> TS','BasicType',1,'p_BasicType','AnalizadorSintactico.py',95),
  ('ExpressionList -> expression SEMICOLON','ExpressionList',2,'p_ExpresionList','AnalizadorSintactico.py',98),
  ('ExpressionList -> expression COMMA expression SEMICOLON','ExpressionList',4,'p_ExpresionList','AnalizadorSintactico.py',99),
  ('ExpressionList -> expression COMMA expression COMMA expression SEMICOLON','ExpressionList',6,'p_ExpresionList','AnalizadorSintactico.py',100),
  ('ExpressionList -> expression COMMA expression COMMA expression COMMA expression SEMICOLON','ExpressionList',8,'p_ExpresionList','AnalizadorSintactico.py',101),
  ('type -> expression SimpleType','type',2,'p_type','AnalizadorSintactico.py',104),
  ('type -> TypeDeclaration','type',1,'p_type','AnalizadorSintactico.py',105),
  ('ConstDeclaration -> ID ASIGNATION expression SEMICOLON','ConstDeclaration',4,'p_ConstDeclaration','AnalizadorSintactico.py',108),
  ('VarDeclaration -> IdList COLON type SEMICOLON','VarDeclaration',4,'p_VarDeclaration','AnalizadorSintactico.py',111),
  ('VarDeclaration -> IdList COLON LBRACKET ID RBRACKET FormalType SEMICOLON ID COLON FormalType SEMICOLON','VarDeclaration',11,'p_VarDeclaration','AnalizadorSintactico.py',112),
  ('IdList -> ID','IdList',1,'p_IdList','AnalizadorSintactico.py',115),
  ('IdList -> ID COMMA ID','IdList',3,'p_IdList','AnalizadorSintactico.py',116),
  ('IdList -> ID COMMA ID COMMA ID','IdList',5,'p_IdList','AnalizadorSintactico.py',117),
  ('IdList -> ID COMMA ID COMMA ID COMMA ID','IdList',7,'p_IdList','AnalizadorSintactico.py',118),
  ('selector -> DOT ID','selector',2,'p_selector','AnalizadorSintactico.py',122),
  ('selector -> DOT integer','selector',2,'p_selector','AnalizadorSintactico.py',123),
  ('selector -> expression','selector',1,'p_selector','AnalizadorSintactico.py',124),
  ('factor -> ID selector','factor',2,'p_factor','AnalizadorSintactico.py',127),
  ('factor -> integer','factor',1,'p_factor','AnalizadorSintactico.py',128),
  ('factor -> TILDE factor','factor',2,'p_factor','AnalizadorSintactico.py',129),
  ('factor -> LPARENT expression RPARENT','factor',3,'p_factor','AnalizadorSintactico.py',130),
  ('factor -> MUX LPARENT expression COLON expression COMMA expression RPARENT','factor',8,'p_factor','AnalizadorSintactico.py',131),
  ('factor -> MUX LPARENT expression COMMA expression COLON expression COMMA expression COMMA expression COMMA expression RPARENT','factor',14,'p_factor','AnalizadorSintactico.py',132),
  ('factor -> REG LPARENT expression COMMA expression RPARENT','factor',6,'p_factor','AnalizadorSintactico.py',133),
  ('factor -> LATCH LPARENT expression COMMA expression RPARENT','factor',6,'p_factor','AnalizadorSintactico.py',134),
  ('factor -> SR LPARENT expression COMMA expression RPARENT','factor',6,'p_factor','AnalizadorSintactico.py',135),
  ('term -> factor TIMES factor','term',3,'p_term','AnalizadorSintactico.py',138),
  ('term -> factor DIVIDE factor','term',3,'p_term','AnalizadorSintactico.py',139),
  ('term -> factor MOD factor','term',3,'p_term','AnalizadorSintactico.py',140),
  ('expression -> term PLUS term','expression',3,'p_expression','AnalizadorSintactico.py',144),
  ('expression -> term MINUS term','expression',3,'p_expression','AnalizadorSintactico.py',145),
  ('assignment -> ID selector ASIGNATION condition OR expression','assignment',6,'p_assignment','AnalizadorSintactico.py',148),
  ('condition -> expression','condition',1,'p_condition','AnalizadorSintactico.py',151),
  ('relation -> expression EQUAL expression','relation',3,'p_relation','AnalizadorSintactico.py',154),
  ('relation -> expression HASHTAG expression','relation',3,'p_relation','AnalizadorSintactico.py',155),
  ('relation -> expression LESS expression','relation',3,'p_relation','AnalizadorSintactico.py',156),
  ('relation -> expression LESSEQUAL expression','relation',3,'p_relation','AnalizadorSintactico.py',157),
  ('relation -> expression GREATER expression','relation',3,'p_relation','AnalizadorSintactico.py',158),
  ('relation -> expression GREATEREQUAL expression','relation',3,'p_relation','AnalizadorSintactico.py',159),
  ('IfStatement -> IF relation THEN StatementSequence LBLOCK ELSIF relation THEN StatementSequence RBLOCK LBRACKET ELSE StatementSequence RBRACKET END','IfStatement',15,'p_IfStatement','AnalizadorSintactico.py',162),
  ('ForStatement -> FOR ID ASIGNATION expression DOUBLEDOT expression DO StatementSequence END','ForStatement',9,'p_ForStatement','AnalizadorSintactico.py',165),
  ('statement -> assignment','statement',1,'p_statement','AnalizadorSintactico.py',168),
  ('statement -> UnitAssignment','statement',1,'p_statement','AnalizadorSintactico.py',169),
  ('statement -> IfStatement','statement',1,'p_statement','AnalizadorSintactico.py',170),
  ('statement -> ForStatement','statement',1,'p_statement','AnalizadorSintactico.py',171),
  ('StatementSequence -> statement SEMICOLON statement','StatementSequence',3,'p_StatementSequence','AnalizadorSintactico.py',174),
  ('FormalType -> expression BIT','FormalType',2,'p_FormalType','AnalizadorSintactico.py',178),
  ('FormalType -> BIT','FormalType',1,'p_FormalType','AnalizadorSintactico.py',179),
  ('module -> MODULE ID SEMICOLON','module',3,'p_module','AnalizadorSintactico.py',186),
  ('module -> TypeDeclaration','module',1,'p_module','AnalizadorSintactico.py',187),
  ('module -> CONST ConstDeclaration','module',2,'p_module','AnalizadorSintactico.py',188),
  ('module -> IN VarDeclaration','module',2,'p_module','AnalizadorSintactico.py',189),
  ('module -> INOUT VarDeclaration','module',2,'p_module','AnalizadorSintactico.py',190),
  ('module -> OUT VarDeclaration','module',2,'p_module','AnalizadorSintactico.py',191),
  ('module -> VAR VarDeclaration','module',2,'p_module','AnalizadorSintactico.py',192),
  ('module -> BEGIN StatementSequence','module',2,'p_module','AnalizadorSintactico.py',193),
  ('module -> END ID DOT','module',3,'p_module','AnalizadorSintactico.py',194),
  ('TypeDeclaration -> TYPE ID SEMICOLON','TypeDeclaration',3,'p_TypeDeclaration','AnalizadorSintactico.py',198),
  ('TypeDeclaration -> CONST ConstDeclaration','TypeDeclaration',2,'p_TypeDeclaration','AnalizadorSintactico.py',199),
  ('TypeDeclaration -> IN IdList COLON FormalType SEMICOLON','TypeDeclaration',5,'p_TypeDeclaration','AnalizadorSintactico.py',200),
  ('TypeDeclaration -> INOUT IdList COLON FormalType SEMICOLON','TypeDeclaration',5,'p_TypeDeclaration','AnalizadorSintactico.py',201),
  ('TypeDeclaration -> OUT VarDeclaration','TypeDeclaration',2,'p_TypeDeclaration','AnalizadorSintactico.py',202),
  ('TypeDeclaration -> VAR VarDeclaration','TypeDeclaration',2,'p_TypeDeclaration','AnalizadorSintactico.py',203),
  ('TypeDeclaration -> BEGIN StatementSequence','TypeDeclaration',2,'p_TypeDeclaration','AnalizadorSintactico.py',204),
  ('TypeDeclaration -> END ID DOT','TypeDeclaration',3,'p_TypeDeclaration','AnalizadorSintactico.py',205),
  ('UnitAssignment -> ID selector LPARENT ExpressionList RPARENT','UnitAssignment',5,'p_UnitAssignment','AnalizadorSintactico.py',209),
]
